<!DOCTYPE html>
<html lang="en"><head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1"><!-- Begin Jekyll SEO tag v2.6.1 -->
<title>Maru | Record what I learned, what I thought… everyday.</title>
<meta name="generator" content="Jekyll v3.8.7" />
<meta property="og:title" content="Maru" />
<meta name="author" content="maruthink" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Record what I learned, what I thought… everyday." />
<meta property="og:description" content="Record what I learned, what I thought… everyday." />
<link rel="canonical" href="https://maruthink.github.io/atom.xml" />
<meta property="og:url" content="https://maruthink.github.io/atom.xml" />
<meta property="og:site_name" content="Maru" />
<script type="application/ld+json">
{"description":"Record what I learned, what I thought… everyday.","@type":"WebPage","url":"https://maruthink.github.io/atom.xml","headline":"Maru","author":{"@type":"Person","name":"maruthink"},"@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->
<link rel="stylesheet" href="/assets/css/style.css">
  <link rel="icon" type="image/png" href="/assets/favicon.png" /><link type="application/atom+xml" rel="alternate" href="https://maruthink.github.io/feed.xml" title="Maru" /></head>
<body><div class="site-header">
  <div class="wrapper">
    <a class="site-title" rel="author" href="/">Maru<b class="command_prompt"></b><b class="blinking_cursor">_</b></a>
    <span class="social_links">
        <a class="color-green-hover" href="https://github.com/gitmaruneko"><i class="fab fa-github-square"></i></a><a class="color-cyan-hover" href="https://twitter.com/twmaruneko"><i class="fab fa-twitter-square"></i></a><a class="color-blue-hover" href="https://www.facebook.com/discretentut"><i class="fab fa-facebook-square"></i></a>
    </span>
  </div>
</div>
<main class="page-content" aria-label="Content">
      <div class="wrapper">
        <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Maru</title>
 <link href="https://maruthink.github.io/atom.xml" rel="self"/>
 <link href="https://maruthink.github.io/"/>
 <updated>2020-06-28T08:12:26+00:00</updated>
 <id>https://maruthink.github.io</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Google的Python認證</title>
   <link href="https://maruthink.github.io/2020/06/28/pythonCertificateOfGoogle.html"/>
   <updated>2020-06-28T00:00:00+00:00</updated>
   <id>https://maruthink.github.io/2020/06/28/pythonCertificateOfGoogle</id>
   <content type="html">&lt;figure class=&quot;foto-legenda&quot;&gt;
	&lt;img src=&quot;/assets/2020/2020062800.jpg&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;前不久開始有個習慣, 會把一些程式, 資訊影片…等當背景音聽&lt;br /&gt;
畢竟公司內不只華人&lt;br /&gt;
舉凡專業上的溝通都有很高機率會使用英文&lt;br /&gt;
如果專業名詞發音錯誤, 除了覺得糗, 還會給人不專業的感覺&lt;/p&gt;

&lt;p&gt;但是覺得既然都花時間”聽影片”了, 同時是不是可以得到點什麼?&lt;br /&gt;
當時Google正好和Coursera合作推出Python認證課程&lt;br /&gt;
工作上使用Python也一段時間了&lt;br /&gt;
所以抱著順手拿證照的心態啟動這個學習&lt;/p&gt;

&lt;p&gt;Google針對這張 Python證照規劃了一系列的學習內容&lt;br /&gt;
總共有六門課程(這六門也分別是六張小證照)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Crash Course on Python&lt;/li&gt;
  &lt;li&gt;Using Python to Interact with the Operating System&lt;/li&gt;
  &lt;li&gt;Introduction to Git and GitHub&lt;/li&gt;
  &lt;li&gt;Troubleshooting and Debugging Techniques&lt;/li&gt;
  &lt;li&gt;Configuration Management and the Cloud&lt;/li&gt;
  &lt;li&gt;Automating Real-World Tasks with Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;每個課程的學習時間預設是一個月 &lt;br /&gt;
學習順序可以自己決定  &lt;br /&gt;
每完成一個課程(考題認證), 便能繼續下一個課程&lt;br /&gt;
但必須完成前五個課程, 才能開啟最後一門課&lt;/p&gt;

&lt;p&gt;課程皆以真人錄製影片講解&lt;br /&gt;
每個小影片講解一個觀念&lt;br /&gt;
例如: dict的用法, awk指令的用法…等&lt;br /&gt;
只要對於觀念有任何不了解, 都可以重複播放影片&lt;br /&gt;
或者查閱教學提供的參考內容&lt;/p&gt;

&lt;p&gt;課程中不會用到的什麼高深或讓初學者困惑的程式技巧&lt;br /&gt;
舉凡了解dict, list這些資料結構便能完成練習題  &lt;br /&gt;
只要確保了解影片內容, 跟著課程規劃的步調就能順利完成課程&lt;br /&gt;
除了內容規劃得不錯以外&lt;br /&gt;
Google還提供&lt;strong&gt;Qwiklabs&lt;/strong&gt;環境&lt;br /&gt;
避免學習者花時間在設定環境上, 用來練習程式真的非常方便&lt;/p&gt;

&lt;p&gt;我接觸Python已有一年的時間&lt;br /&gt;
當初是以戰養戰的方式在學習Python&lt;br /&gt;
因此在觀看這些影片的過程中, 又重新建立觀念打好基礎&lt;/p&gt;

&lt;p&gt;這個認證的名稱是&lt;strong&gt;Python&lt;/strong&gt;&lt;br /&gt;
可能很多人一看到名稱變以為這個課程內容只跟Python有關(在聊千篇一律的無聊語法)&lt;br /&gt;
其實並非如此&lt;br /&gt;
舉凡Coding, 利用python腳本處理OS相關事務, 物件導向觀念, debug, 甚至Cloud也都有提到&lt;br /&gt;
當然Python的應用真的非常廣泛, 內容不勝枚舉&lt;br /&gt;
Google著實為初接觸PYTHON的學習者規劃了一套很不錯的學習地圖!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;都要忘記怎麼更新部落格了&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>My First Post</title>
   <link href="https://maruthink.github.io/2020/02/14/firstPost.html"/>
   <updated>2020-02-14T00:00:00+00:00</updated>
   <id>https://maruthink.github.io/2020/02/14/firstPost</id>
   <content type="html">&lt;p&gt;原本就打算今年要好好培養寫作習慣&lt;br /&gt;
在看了以下幾篇文章之後, 才決定要弄一個每日學習記錄空間&lt;br /&gt;
希望以此部落格來訓練思維&lt;/p&gt;

&lt;h3 id=&quot;刻意練習&quot;&gt;&lt;a href=&quot;http://teddy-chen-tw.blogspot.com/2016/04/blog-post_28.html&quot;&gt;刻意練習&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;每一篇心得都有價值&quot;&gt;&lt;a href=&quot;https://medium.com/hulis-blog/why-blogging-ab77fd8c6ffa&quot;&gt;每一篇心得都有價值&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;我為什麼鼓勵工程師寫blog&quot;&gt;&lt;a href=&quot;https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging&quot;&gt;我為什麼鼓勵工程師寫blog&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;藉由這個空間來培養自己能以一個有系統, 有組織的方式來呈現內化後的知識的能力
(好拗口…)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;When people ask me for advice on blogging,  
I always respond with yet another form of the same advice:  
pick a schedule you can live with, and stick to it.   
Until you do that, none of the other advice I could give you will matter.   
I don't care if you suck at writing.   
I don't care if nobody reads your blog.   
I don't care if you have nothing interesting to say.   
If you can demonstrate a willingness to write,   
and a desire to keep continually improving your writing,   
you will eventually be successful.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 

</feed>


      </div>
    </main><footer class="site-footer">
  <div class="wrapper">
    <div class="credits"><a href="https://github.com/bitbrain/jekyll-dash">dash</a> theme for Jekyll by <a href="https://github.com/bitbrain">bitbrain</a> made with <i class="fas fa-heart"></i><div class="toggleWrapper">
    <input type="checkbox" class="dn" id="theme-toggle" onclick="modeSwitcher()" checked />
    <label for="theme-toggle" class="toggle">
    <span class="toggle__handler">
      <span class="crater crater--1"></span>
      <span class="crater crater--2"></span>
      <span class="crater crater--3"></span>
    </span>
        <span class="star star--1"></span>
        <span class="star star--2"></span>
        <span class="star star--3"></span>
        <span class="star star--4"></span>
        <span class="star star--5"></span>
        <span class="star star--6"></span>
    </label>
</div>
<script type="text/javascript">
const theme = localStorage.getItem('theme');

if (theme === "light") {
    document.documentElement.setAttribute('data-theme', 'light');
} else {
    document.documentElement.setAttribute('data-theme', 'dark');
}
const userPrefers = getComputedStyle(document.documentElement).getPropertyValue('content');

function activateDarkTheme() {
    document.getElementById('theme-toggle').checked = true;
    document.documentElement.setAttribute('data-theme', 'dark');
    document.documentElement.classList.add('theme--dark');
    document.documentElement.classList.remove('theme--light');
	document.getElementById("theme-toggle").className = 'light';
	window.localStorage.setItem('theme', 'dark');
}

function activateLightTheme() {
    document.getElementById('theme-toggle').checked = false;
    document.documentElement.setAttribute('data-theme', 'light');
    document.documentElement.classList.add('theme--light');
    document.documentElement.classList.remove('theme--dark');
	document.getElementById("theme-toggle").className = 'dark';
	window.localStorage.setItem('theme', 'light');
}

if (theme === "dark") {
    activateDarkTheme();
} else if (theme === "light") {
    activateLightTheme();
} else if  (userPrefers === "light") {
    activateDarkTheme();
} else {
    activateDarkTheme();
}

function modeSwitcher() {
	let currentMode = document.documentElement.getAttribute('data-theme');
	if (currentMode === "dark") {
	    activateLightTheme();
	} else {
	    activateDarkTheme();
	}
}
</script></div>
  </div>
</footer>


<script>
      window.FontAwesomeConfig = {
        searchPseudoElements: true
      }
    </script>
  </body>

</html>
